---
- name: Create IBM Cloud VPC VSI
  hosts: localhost
  vars:
    name_prefix: ansible-demo
    vsi_image: ibm-ubuntu-18-04-64-ppc64le-minimal-for-vsi
    vsi_profile: cp2-2x4
    ssh_public_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDHi3DUs4s2TE8oZF\
                     Q5m9dzKFFNTrMJonT5DwKA+F40pD0Me4T1JEndqJkPkbsUWj1V3LZX\
                     s+gE5t/WSivHxJTjDg6BSWjTmr7wn5dsYj8FjFbQEC5T9jwzz8UCvW\
                     AsZcXAE0Gukdz50ewGnLEUZV05eWEkDHr8ifmiqNxFgaP2dR1SIV5q\
                     mJgR4fU3XXXZaLbQVgA5s97qU1mgtr7Ofz1d4PxxyqHmmmS7lIufwm\
                     3FHqNQ00IxijrTkPkrFKoOrv9IEsOvrVoHrFvYymRqEPSaL8ZPfbtn\
                     r6i+AcwFu284BgxJn0IPPwAHkttIHomZyY9JJfATTI4/ERia3I7PGh\
                     +zfxIdwuom0Y0iRDc1jVFfa+Il4za9zKAiNiAqYE7DRNkaIK3UF0y/\
                     tsKnUTdgtw3Euliz5/D5F/5/MZkrNHII/Ip0heJTk6u8V4SyjYgU84\
                     BfO9o1JXb+CScItISJKiZz/EYhUf/Rc8PLBJzpaz5OKuS6zgFRs514\
                     wKnDbj/JOJt/sPl1TdyJ/ohu1cDBnYVJuJN9LTVTFxk+U/zB+5zJ0z\
                     js6Hn1XG+X9VjQvmaLw9GnVwSfAvmeyaoF4RRPzGrAULVH86Q/MRn0\
                     zu22b+aoF07moZgvHeKn7BlAcSvAEgnZaLBmoGJqV7iS1p1HpDMO3F\
                     7Wi/p6exFCvStIGC4pQQ== jwcarman@jx1"
    ipv4_cidr_block: 10.240.128.0/24
    zone: us-south-3

  tasks:
    - name: Configure VPC
      ibm_is_vpc:
        name: "{{ name_prefix }}-vpc"
        state: available
        id: "{{ vpc.id | default(omit) }}"
      register: vpc_create_output

    - name: Save VPC as fact
      set_fact:
        cacheable: True
        vpc: "{{ vpc_create_output.resource }}"

    - name: Configure VPC Subnet
      ibm_is_subnet:
        name: "{{ name_prefix }}-subnet"
        state: available
        id: "{{ subnet.id | default(omit) }}"
        vpc: "{{ vpc.id }}"
        ipv4_cidr_block: "{{ ipv4_cidr_block }}"
        zone: "{{ zone }}"
      register: subnet_create_output

    - name: Save VPC Subnet as fact
      set_fact:
        cacheable: True
        subnet: "{{ subnet_create_output.resource }}"

    - name: Configure SSH Key
      ibm_is_ssh_key:
        name: "{{ name_prefix }}-ssh-key"
        public_key: "{{ ssh_public_key }}"
        id: "{{ ssh_key.id | default(omit) }}"
      register: ssh_key_create_output

    - name: Save SSH Key as fact
      set_fact:
        cacheable: True
        ssh_key: "{{ ssh_key_create_output.resource }}"

    - name: Retrieve image list
      ibm_is_images_info:
      register: images_list

    - name: Set VM image name/id dictionary fact
      set_fact:
        cacheable: True
        image_dict: "{{ images_list.resource.images |
                        items2dict(key_name='name', value_name='id') }}"

    - name: Configure VSI
      ibm_is_instance:
        name: "{{ name_prefix }}-vsi"
        state: available
        id: "{{ vsi.id | default(omit) }}"
        vpc: "{{ vpc.id }}"
        profile: "{{ vsi_profile }}"
        image: "{{ image_dict[vsi_image] }}"
        keys:
          - "{{ ssh_key.id }}"
        primary_network_interface:
          - subnet: "{{ subnet.id }}"
        zone: "{{ zone }}"
      register: vsi_create_output

    - name: Save VSI as fact
      set_fact:
        cacheable: True
        vsi: "{{ vsi_create_output.resource }}"

    - name: Configure Floating IP Address
      ibm_is_floating_ip:
        name: "{{ name_prefix }}-fip"
        state: available
        id: "{{ fip.id | default(omit) }}"
        target: "{{ vsi.primary_network_interface[0]['id'] }}"
      register: fip_create_output

    - name: Save Floating IP as fact
      set_fact:
        cacheable: True
        fip: "{{ fip_create_output.resource }}"

    - name: Print Floating IP Address
      debug:
        msg: "IP Address: {{ fip.address }}"

    - name: Configure Security Group Rule to open SSH on the VSI
      ibm_is_security_group_rule:
        state: available
        group: "{{ vpc.default_security_group }}"
        direction: inbound
        remote: 0.0.0.0/0
        tcp:
          - port_max: 22
            port_min: 22

    - name: Add VSI to Ansible inventory
      add_host:
        name: "{{ fip.address }}"
        ansible_user: root
        groups: new_vsi
        ansible_ssh_extra_args: -o StrictHostKeyChecking=no

- name: Check Ansible connection to new DEMO VSI
  hosts: new_vsi
  gather_facts: False
  tasks:
    - name: Wait for VSI to become reachable over SSH
      wait_for_connection:

- name: Check Ansible connection to new DEMO VSI
  hosts: new_vsi
  tasks:
    - name: Collect OS information
      command: cat /etc/os-release
      register: os_info

    - name: Print OS information
      debug:
        var: os_info.stdout_lines
