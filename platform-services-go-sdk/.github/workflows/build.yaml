# This workflow will build and unit test the project.
# If the workflow is running on the "main" branch, then
# semantic-release is also run to create a new release (if
# warranted by the new commits being built).

name: build

on: 
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  workflow_dispatch:
    # Allow workflow to be triggered manually.

jobs:
  detect-secrets:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: detect-secrets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install detect-secrets
        run: |
          pip install --upgrade "git+https://github.com/ibm/detect-secrets.git@master#egg=detect-secrets"

      - name: Run detect-secrets
        run: |
          detect-secrets scan --update .secrets.baseline
          detect-secrets -v audit --report --fail-on-unaudited --fail-on-live --fail-on-audited-real .secrets.baseline

  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: build-test (go v${{ matrix.go-version }})
    needs: detect-secrets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23', '1.24']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go v${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.64.4
          golangci-lint version
          go install golang.org/x/tools/cmd/goimports@latest

      - name: Build/Test Project
        run: make travis-ci

  publish-release:
    if: "github.ref_name == 'main' && github.event_name != 'pull_request'"
    needs: build
    name: publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install Deployment Tools
        run: |
          pip install bump-my-version
          npm install

      - name: Run semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run semantic-release
